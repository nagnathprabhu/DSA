An inorder traversal first visits the left child (including its entire subtree), then visits the node, and 
finally visits the right child (including its entire subtree). 
The binary search tree makes use of this traversal to print all nodes in ascending order of value.
image.png

for better visuals below VVVVVV
https://opendsa-server.cs.vt.edu/ODSA/Books/Everything/html/BinaryTreeTraversal.html


https://www.programiz.com/java-programming/examples/inorder-tree-traversal

examples

        1
      /    \
    3        2

    inorder sequence: 3 1 2

        10
     /      \ 
    20       30 
  /    \    /
 40    60  50
Output: 40 20 60 10 50 30


static void inorder(Node node) {
    if(node == null) return;

    inorder(node.left);

    sout(node.item);

    inorder(node.right);
}

